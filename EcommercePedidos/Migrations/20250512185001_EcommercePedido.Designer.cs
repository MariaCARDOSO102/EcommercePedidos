// <auto-generated />
using EcommercePedidos.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EcommercePedidos.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250512185001_EcommercePedido")]
    partial class EcommercePedido
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EcommercePedidos.Objects.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Produto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("produto");

                    b.Property<int>("StatusPedido")
                        .HasColumnType("integer")
                        .HasColumnName("statuspedido");

                    b.Property<int>("TipoFrete")
                        .HasColumnType("integer")
                        .HasColumnName("tipofrete");

                    b.Property<float>("Valor")
                        .HasMaxLength(50)
                        .HasColumnType("real")
                        .HasColumnName("valor");

                    b.HasKey("Id");

                    b.ToTable("pedido");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Produto = "Blusa",
                            StatusPedido = 1,
                            TipoFrete = 2,
                            Valor = 20.5f
                        },
                        new
                        {
                            Id = 2,
                            Produto = "Calça",
                            StatusPedido = 1,
                            TipoFrete = 2,
                            Valor = 50.5f
                        },
                        new
                        {
                            Id = 3,
                            Produto = "Sapato",
                            StatusPedido = 1,
                            TipoFrete = 2,
                            Valor = 100f
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
